{"version":3,"sources":["services/serverHelper.js","components/filter.js","components/personForm.js","components/people.js","components/addedNotification.js","components/deletedNotif.js","components/updatedNotif.js","components/notFoundNotif.js","components/errorNotification.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newContact","post","contactID","toDelete","delete","Filter","filterChange","onChange","PersonForm","props","newName","checkName","addNewName","newNumber","checkNumber","value","type","onClick","PersonInfo","person","deleteCallBack","name","number","id","People","people","map","i","key","AddedNotification","className","DeletedNotification","UpdatedNotification","NotFound","ErrorNotification","error","App","useState","persons","setPersons","setNewName","setNewNumber","filteredPeople","setFilterPeople","notifName","setNotifName","deletedName","setDeletedName","updatedName","notFound","setNotFound","errorNotif","setErrorNotif","useEffect","serverHelper","contacts","event","filterValue","target","toLowerCase","filtered","filter","Person","includes","preventDefault","length","push","setTimeout","catch","console","log","personID","personName","message","window","confirm","dummy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56d33696.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\n//old version when it was not communicating with backend\nconst baseURL = '/api/persons' //url when deployed to production with backend\n\nconst getContacts = () =>{\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst addContact = (newContact) =>{\n    const request = axios.post(baseURL, newContact)\n    return request.then(response => response.data)\n}\n\nconst deleteContact =(contactID) =>{\n    const toDelete = `${baseURL}/${contactID}`\n    const request = axios.delete(toDelete)\n    return request.then(response => response.data)\n}\n\nconst updateContact = (id,newObject) =>{\n    const request = axios.put(`${baseURL}/${id}`,newObject)\n    return request.then(response => response.data);\n}\n\nexport default{\n    getContacts: getContacts,\n    addContact: addContact,\n    deleteContact: deleteContact,\n    updateContact: updateContact\n}","import React from 'react'\nconst Filter =({filterChange})=>{\n  return(\n    <div>Filter names shown with <input onChange={filterChange}/> </div>\n  )\n}\n\nexport default Filter","import React from 'react'\nconst PersonForm = (props) =>{\n  //call back functions and values\n  const newName = props.newName\n  const checkName = props.checkName\n  const addNewName = props.addNewName\n  const newNumber = props.newNumber\n  const checkNumber = props.checkNumber\n\n  return(\n    <form>\n        <div>name: <input value={newName} onChange={checkName}/></div>\n        <div> number: <input value={newNumber} onChange={checkNumber}/> </div>\n        <div>\n          <button type=\"submit\" onClick={addNewName}>\n          Add\n          </button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst People =(props)=>{\n  return(\n    <ul>\n        {props.people.map((person,i)=>\n          <li key={i}><PersonInfo person={person} deleteCallBack={props.deleteCallBack} /> </li>\n        )}\n    </ul>\n  )\n}\n\nconst PersonInfo = (props) =>{\n  const person = props.person\n  const deleteCallBack= props.deleteCallBack\n  return(\n    <div>\n      <div>\n        {person.name} {person.number}\n        <button onClick={() =>{deleteCallBack(person.id, person.name)}}> Delete </button>\n      </div>\n    </div>\n  )\n}\n\nexport default People","import React from 'react'\nimport './notif.css'\n\nconst AddedNotification = ({name}) =>{\n  if(name === null || name===''){\n    return null;\n  }\n  return(\n    <div className='Added'>\n      {name} was added to phonebook!\n    </div>\n  )\n}\n\nexport default AddedNotification","import React from 'react'\nimport './notif.css'\n\nconst DeletedNotification = ({name}) =>{\n  if(name === null || name ===''){\n    return null;\n  }\n  return(\n    <div className='Deleted'>\n      {name} was successfully deleted from the phonebook.\n    </div>\n  )\n}\n\nexport default DeletedNotification","import React from 'react'\nimport './notif.css'\n\nconst UpdatedNotification = ({name}) =>{\n  if(name === null || name ===''){\n    return null;\n  }\n  return(\n      <div className='Updated'>\n        Information for {name} was updated.\n      </div>\n    )\n}\nexport default UpdatedNotification","import React from 'react'\nimport './notif.css'\n\nconst NotFound = ({name}) =>{\n  if(name === null){\n    return null;\n  }\n  return(\n    <div className='NotFound'>\n      Information for {name} has already been removed from the server.\n    </div>\n  )\n}\n\nexport default NotFound","import React from 'react'\nimport './notif.css'\n\nconst ErrorNotification = ({error}) =>{\n  if(error === null){\n    return null;\n  }\n  return(\n    <div className='NotFound'>\n      {error}\n    </div>\n  )\n}\n\nexport default ErrorNotification","import React, {useState, useEffect} from 'react';\nimport serverHelper from './services/serverHelper'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport People from './components/people'\nimport AddedNotification from './components/addedNotification'\nimport DeletedNotification from './components/deletedNotif'\nimport UpdatedNotification from'./components/updatedNotif'\nimport NotFound from './components/notFoundNotif'\nimport ErrorNotification from './components/errorNotification'\n\n//REMEMBER TO ADD LINK TO THE HEROKU APP\n\nconst App = ()=> {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filteredPeople, setFilterPeople] = useState(persons)\n  const [notifName, setNotifName] = useState(null)\n  const [deletedName, setDeletedName] = useState(null)\n  const [updatedName, setUpdatedName] = useState(null)\n  const [notFound, setNotFound] = useState(null)\n  const [errorNotif, setErrorNotif] = useState(null)\n\n  //get the data from the server\n  const effectHook = () =>{\n    const promise = serverHelper.getContacts()\n    promise.then(contacts => {\n      setPersons(contacts)\n      setFilterPeople(contacts)\n    })\n  }\n  //finish the effect hook\n  useEffect(effectHook,[])\n\n  const checkName=(event)=> setNewName(event.target.value)\n  const checkNumber=(event) => setNewNumber(event.target.value)\n  const filterChange =(event) =>{\n    let filterValue = event.target.value.toLowerCase()\n    //get latests value\n    if(filterValue === ''){\n      setFilterPeople(persons)\n    }\n    else{\n      const filtered = persons.filter(Person => Person.name.toLowerCase().includes(filterValue))\n      setFilterPeople(filtered)\n      //console.log(filtered)\n    }\n  }\n  \n  //event to handle a new person\n  const addNewName = (event) =>{\n    event.preventDefault();  \n    //check if it already exists\n\n    ////Note: Not allowing duplicate names as of Part 3, Validation section. Handled in Mongoose schema\n    ///this means we cannot allow entries with same name but different phone number either\n    ///Simply calling the post method and letting the error handling be done from there\n\n    //let found = persons.find(person => person.name === newName)\n    // //the contact already exists\n    // if(found !== undefined && newNumber === found.number){\n    //   const msg = newName + ' is already added to the phonebook';\n    //   alert(msg);\n    // }\n\n    //needs to update phone number\n    // if(found !== undefined && newNumber !== found.number){\n    //   let message = found.name + \" is already added to phonebook, replace old number with a new one?\"\n    //   let replace = window.confirm(message)\n    //   //update this contact's number\n    //   if(replace){\n    //     const updatedPerson = {\n    //       name: found.name,\n    //       number: newNumber,\n    //       id: found.id\n    //     }\n    //     const update = serverHelper.updateContact(found.id, updatedPerson)\n    //     update.then(newNumber => {\n    //        //update dislay\n    //       const promise = serverHelper.getContacts()\n    //       promise.then(contacts => {\n    //         setPersons(contacts)\n    //         setFilterPeople(contacts)\n    //         setNewName('')\n    //         setNewNumber('')\n    //       })\n\n    //       //show notification\n    //       setUpdatedName(updatedPerson.name)\n    //       setTimeout(() => {\n    //         setUpdatedName(null)\n    //       }, 3000)\n\n    //     })\n    //     .catch(error =>{\n    //       //show not found notification\n    //       setNotFound(updatedPerson.name)\n    //       setTimeout(() => {\n    //         setNotFound(null)\n    //       }, 3000)\n    //       setNewName('')\n    //       setNewNumber('')\n    //     })\n    //   }\n    // }\n    //else{\n      const Person = {\n        name: newName,\n        number: newNumber,\n        id: persons[persons.length-1].id + 1\n      }\n\n      const addPromise = serverHelper.addContact(Person) \n      addPromise.then(newContact =>{\n        persons.push(newContact)\n        setPersons(persons)\n        setNewName('')\n        setNewNumber('')\n        setNotifName(Person.name)\n        //reset added Addednotification\n        setTimeout(() => {\n            setNotifName(null)\n        }, 3000)\n\n      })\n      .catch(error => {\n        console.log(error.response.data)\n\n        //using the 'not found' notification element. Displays the right color anyway\n        setErrorNotif(error.response.data.error)\n        setTimeout(() => {\n            setErrorNotif(null)\n        }, 3000)\n        console.log(\"failed to add new contact\")\n      })\n     \n    //}\n  }\n\n  //delete contact call back\n  const deletePerson = (personID,personName)=>{\n    //console.log(personID)\n    let message = \"Delete \" + personName + \"?\"\n    let delConfirmed = window.confirm(message)\n    if(delConfirmed){\n      const deletePromise = serverHelper.deleteContact(personID)\n      deletePromise.then(dummy => {\n          //update dislay\n          const promise = serverHelper.getContacts()\n          promise.then(contacts => {\n            setPersons(contacts)\n            setFilterPeople(contacts)\n            //show notification\n            setDeletedName(personName)\n            setTimeout(() => {\n              setDeletedName(null)\n            }, 3000)\n          })\n      })\n      .catch(error =>{\n        //show 404 notification\n        setNotFound(personName)\n        setTimeout(() => {\n              setNotFound(null)\n            }, 3000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook </h2>\n      <AddedNotification name={notifName} />\n      <UpdatedNotification name={updatedName} />\n      <DeletedNotification name={deletedName} />\n      <NotFound name={notFound} />\n      <ErrorNotification error={errorNotif} />\n      <Filter filterChange={filterChange} />\n\n      <h2>Add a new person</h2>\n      <PersonForm newName ={newName} checkName={checkName} addNewName={addNewName} newNumber={newNumber} checkNumber={checkNumber} />\n\n      <h2>Numbers </h2>\n      <People people={filteredPeople} deleteCallBack={deletePerson} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}